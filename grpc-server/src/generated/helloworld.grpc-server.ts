// @generated by protobuf-ts 2.9.4 with parameter server_grpc1
// @generated from protobuf file "helloworld.proto" (package "helloworld", syntax proto3)
// tslint:disable
import { HelloReply } from "./helloworld";
import { HelloRequest } from "./helloworld";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service helloworld.Greeter
 */
export interface IGreeter extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: SayHello(helloworld.HelloRequest) returns (helloworld.HelloReply);
     */
    sayHello: grpc.handleUnaryCall<HelloRequest, HelloReply>;
}
/**
 * @grpc/grpc-js definition for the protobuf service helloworld.Greeter.
 *
 * Usage: Implement the interface IGreeter and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IGreeter = ...
 * server.addService(greeterDefinition, service);
 * ```
 */
export const greeterDefinition: grpc.ServiceDefinition<IGreeter> = {
    sayHello: {
        path: "/helloworld.Greeter/SayHello",
        originalName: "SayHello",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => HelloReply.fromBinary(bytes),
        requestDeserialize: bytes => HelloRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(HelloReply.toBinary(value)),
        requestSerialize: value => Buffer.from(HelloRequest.toBinary(value))
    }
};
